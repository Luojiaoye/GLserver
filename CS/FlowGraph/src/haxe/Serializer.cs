// Generated by Haxe 3.4.7

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class Serializer : global::haxe.lang.HxObject {
		
		static Serializer() {
			global::haxe.Serializer.USE_CACHE = false;
			global::haxe.Serializer.USE_ENUM_INDEX = false;
			global::haxe.Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
			global::haxe.Serializer.BASE64_CODES = null;
		}
		
		
		public Serializer(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Serializer() {
			global::haxe.Serializer.__hx_ctor_haxe_Serializer(this);
		}
		
		
		public static void __hx_ctor_haxe_Serializer(global::haxe.Serializer __hx_this) {
			__hx_this.buf = new global::StringBuf();
			__hx_this.cache = new global::Array<object>();
			__hx_this.useCache = global::haxe.Serializer.USE_CACHE;
			__hx_this.useEnumIndex = global::haxe.Serializer.USE_ENUM_INDEX;
			__hx_this.shash = new global::haxe.ds.StringMap<int>();
			__hx_this.scount = 0;
		}
		
		
		public static bool USE_CACHE;
		
		public static bool USE_ENUM_INDEX;
		
		public static string BASE64;
		
		public static global::haxe.lang.Null<int>[] BASE64_CODES;
		
		public global::StringBuf buf;
		
		public global::Array cache;
		
		public global::haxe.ds.StringMap<int> shash;
		
		public int scount;
		
		public bool useCache;
		
		public bool useEnumIndex;
		
		public virtual void serializeString(string s) {
			global::haxe.lang.Null<int> x = this.shash.@get(s);
			if (x.hasValue) {
				this.buf.b.Append(((string) ("R") ));
				this.buf.b.Append(((string) (global::Std.@string((x).toDynamic())) ));
				return;
			}
			
			this.shash.@set(s, this.scount++);
			this.buf.b.Append(((string) ("y") ));
			s = global::System.Uri.EscapeDataString(((string) (s) ));
			this.buf.b.Append(((string) (global::Std.@string(s.Length)) ));
			this.buf.b.Append(((string) (":") ));
			this.buf.b.Append(((string) (global::Std.@string(s)) ));
		}
		
		
		public virtual bool serializeRef(object v) {
			{
				int _g1 = 0;
				int _g = ((int) (global::haxe.lang.Runtime.getField_f(this.cache, "length", 520590566, true)) );
				while (( _g1 < _g )) {
					int i = _g1++;
					if (global::haxe.lang.Runtime.eq(this.cache[i], v)) {
						this.buf.b.Append(((string) ("r") ));
						this.buf.b.Append(((string) (global::Std.@string(i)) ));
						return true;
					}
					
				}
				
			}
			
			global::haxe.lang.Runtime.callField(this.cache, "push", 1247875546, new global::Array<object>(new object[]{v}));
			return false;
		}
		
		
		public virtual void serializeFields(object v) {
			{
				int _g = 0;
				global::Array<object> _g1 = global::Reflect.fields(v);
				while (( _g < _g1.length )) {
					string f = global::haxe.lang.Runtime.toString(_g1[_g]);
					 ++ _g;
					this.serializeString(f);
					this.serialize(global::Reflect.field(v, f));
				}
				
			}
			
			this.buf.b.Append(((string) ("g") ));
		}
		
		
		public virtual void serialize(object v) {
			unchecked {
				global::ValueType _g = global::Type.@typeof(v);
				switch (_g.index) {
					case 0:
					{
						this.buf.b.Append(((string) ("n") ));
						break;
					}
					
					
					case 1:
					{
						int v1 = ((int) (global::haxe.lang.Runtime.toInt(v)) );
						if (( v1 == 0 )) {
							this.buf.b.Append(((string) ("z") ));
							return;
						}
						
						this.buf.b.Append(((string) ("i") ));
						this.buf.b.Append(((string) (global::Std.@string(v1)) ));
						break;
					}
					
					
					case 2:
					{
						double v2 = ((double) (global::haxe.lang.Runtime.toDouble(v)) );
						if (global::System.Double.IsNaN(((double) (v2) ))) {
							this.buf.b.Append(((string) ("k") ));
						}
						else if ( ! (((  ! (global::System.Double.IsInfinity(((double) (v2) )))  &&  ! (global::System.Double.IsNaN(((double) (v2) )))  ))) ) {
							this.buf.b.Append(((string) (( (( v2 < 0 )) ? ("m") : ("p") )) ));
						}
						else {
							this.buf.b.Append(((string) ("d") ));
							this.buf.b.Append(((string) (global::Std.@string(v2)) ));
						}
						
						break;
					}
					
					
					case 3:
					{
						this.buf.b.Append(((string) (( (global::haxe.lang.Runtime.toBool((v))) ? ("t") : ("f") )) ));
						break;
					}
					
					
					case 4:
					{
						if (( v is global::System.Type )) {
							string className = global::Type.getClassName(((global::System.Type) (v) ));
							this.buf.b.Append(((string) ("A") ));
							this.serializeString(className);
						}
						else if (( v is global::System.Type )) {
							this.buf.b.Append(((string) ("B") ));
							this.serializeString(global::Type.getEnumName(((global::System.Type) (v) )));
						}
						else {
							if (( this.useCache && this.serializeRef(v) )) {
								return;
							}
							
							this.buf.b.Append(((string) ("o") ));
							this.serializeFields(v);
						}
						
						break;
					}
					
					
					case 5:
					{
						throw global::haxe.lang.HaxeException.wrap("Cannot serialize function");
					}
					
					
					case 6:
					{
						global::System.Type c = ((global::System.Type) (_g.@params[0]) );
						{
							if (global::haxe.lang.Runtime.refEq(c, typeof(string))) {
								this.serializeString(global::haxe.lang.Runtime.toString(v));
								return;
							}
							
							if (( this.useCache && this.serializeRef(v) )) {
								return;
							}
							
							{
								string _g1 = global::Type.getClassName(c);
								switch (_g1) {
									case "Array":
									{
										int ucount = 0;
										this.buf.b.Append(((string) ("a") ));
										int l = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(v, "length", 520590566, true))) );
										{
											int _g11 = 0;
											int _g2 = l;
											while (( _g11 < _g2 )) {
												int i = _g11++;
												if (( ((object) (global::haxe.lang.Runtime.callField(v, "__get", 1915412854, new global::Array<object>(new object[]{i}))) ) == null )) {
													 ++ ucount;
												}
												else {
													if (( ucount > 0 )) {
														if (( ucount == 1 )) {
															this.buf.b.Append(((string) ("n") ));
														}
														else {
															this.buf.b.Append(((string) ("u") ));
															this.buf.b.Append(((string) (global::Std.@string(ucount)) ));
														}
														
														ucount = 0;
													}
													
													this.serialize(((object) (global::haxe.lang.Runtime.callField(v, "__get", 1915412854, new global::Array<object>(new object[]{i}))) ));
												}
												
											}
											
										}
										
										if (( ucount > 0 )) {
											if (( ucount == 1 )) {
												this.buf.b.Append(((string) ("n") ));
											}
											else {
												this.buf.b.Append(((string) ("u") ));
												this.buf.b.Append(((string) (global::Std.@string(ucount)) ));
											}
											
										}
										
										this.buf.b.Append(((string) ("h") ));
										break;
									}
									
									
									case "Date":
									{
										global::Date d = ((global::Date) (v) );
										this.buf.b.Append(((string) ("v") ));
										{
											global::StringBuf _this = this.buf;
											long a = global::System.TimeZone.CurrentTimeZone.ToUniversalTime(((global::System.DateTime) (d.date) )).Ticks;
											_this.b.Append(((string) (global::Std.@string(( ((double) (((long) (( ((long) (a) ) - ((long) (global::Date.epochTicks) ) )) )) ) / ((double) (global::System.TimeSpan.TicksPerMillisecond) ) ))) ));
										}
										
										break;
									}
									
									
									case "List":
									{
										this.buf.b.Append(((string) ("l") ));
										global::List v3 = ((global::List) (v) );
										{
											global::_List.ListNode _g_head = ((global::_List.ListNode) (global::haxe.lang.Runtime.getField(v3, "h", 104, true)) );
											while (( _g_head != null )) {
												object val = global::haxe.lang.Runtime.getField(_g_head, "item", 1170195731, true);
												_g_head = ((global::_List.ListNode) (global::haxe.lang.Runtime.getField(_g_head, "next", 1224901875, true)) );
												object i1 = ((object) (val) );
												this.serialize(i1);
											}
											
										}
										
										this.buf.b.Append(((string) ("h") ));
										break;
									}
									
									
									case "haxe.ds.IntMap":
									{
										this.buf.b.Append(((string) ("q") ));
										global::haxe.ds.IntMap v4 = ((global::haxe.ds.IntMap) (v) );
										{
											object k = ((object) (new global::haxe.ds._IntMap.IntMapKeyIterator<object>(((global::haxe.ds.IntMap<object>) (global::haxe.ds.IntMap<object>.__hx_cast<object>(((global::haxe.ds.IntMap) (v4) ))) ))) );
											while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(k, "hasNext", 407283053, null))) {
												int k1 = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(k, "next", 1224901875, null))) );
												this.buf.b.Append(((string) (":") ));
												this.buf.b.Append(((string) (global::Std.@string(k1)) ));
												this.serialize(((object) (global::haxe.lang.Runtime.callField(v4, "get", 5144726, new global::Array<object>(new object[]{k1}))) ));
											}
											
										}
										
										this.buf.b.Append(((string) ("h") ));
										break;
									}
									
									
									case "haxe.ds.ObjectMap":
									{
										this.buf.b.Append(((string) ("M") ));
										global::haxe.ds.ObjectMap v5 = ((global::haxe.ds.ObjectMap) (v) );
										{
											object k2 = v5.keys();
											while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(k2, "hasNext", 407283053, null))) {
												object k3 = ((object) (global::haxe.lang.Runtime.callField(k2, "next", 1224901875, null)) );
												this.serialize(k3);
												this.serialize(((object) (global::haxe.lang.Runtime.callField(v5, "get", 5144726, new global::Array<object>(new object[]{k3}))) ));
											}
											
										}
										
										this.buf.b.Append(((string) ("h") ));
										break;
									}
									
									
									case "haxe.ds.StringMap":
									{
										this.buf.b.Append(((string) ("b") ));
										global::haxe.ds.StringMap v6 = ((global::haxe.ds.StringMap) (v) );
										{
											object k4 = ((object) (new global::haxe.ds._StringMap.StringMapKeyIterator<object>(((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (v6) ))) ))) );
											while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(k4, "hasNext", 407283053, null))) {
												string k5 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.callField(k4, "next", 1224901875, null));
												this.serializeString(k5);
												this.serialize(((object) (global::haxe.lang.Runtime.callField(v6, "get", 5144726, new global::Array<object>(new object[]{k5}))) ));
											}
											
										}
										
										this.buf.b.Append(((string) ("h") ));
										break;
									}
									
									
									case "haxe.io.Bytes":
									{
										global::haxe.io.Bytes v7 = ((global::haxe.io.Bytes) (v) );
										this.buf.b.Append(((string) ("s") ));
										{
											global::StringBuf _this1 = this.buf;
											int x = ((int) (global::System.Math.Ceiling(((double) (( ((double) (( v7.length * 8 )) ) / 6 )) ))) );
											_this1.b.Append(((string) (global::Std.@string(x)) ));
										}
										
										this.buf.b.Append(((string) (":") ));
										int i2 = 0;
										int max = ( v7.length - 2 );
										global::haxe.lang.Null<int>[] b64 = global::haxe.Serializer.BASE64_CODES;
										if (( b64 == null )) {
											global::haxe.lang.Null<int>[] this1 = new global::haxe.lang.Null<int>[global::haxe.Serializer.BASE64.Length];
											b64 = ((global::haxe.lang.Null<int>[]) (this1) );
											{
												int _g12 = 0;
												int _g3 = global::haxe.Serializer.BASE64.Length;
												while (( _g12 < _g3 )) {
													int i3 = _g12++;
													((global::haxe.lang.Null<int>[]) (b64) )[i3] = global::haxe.lang.StringExt.charCodeAt(global::haxe.Serializer.BASE64, i3);
												}
												
											}
											
											global::haxe.Serializer.BASE64_CODES = b64;
										}
										
										while (( i2 < max )) {
											int b1 = ((int) (v7.b[i2++]) );
											int b2 = ((int) (v7.b[i2++]) );
											int b3 = ((int) (v7.b[i2++]) );
											this.buf.b.Append(((char) ((((global::haxe.lang.Null<int>[]) (b64) )[( b1 >> 2 )]).@value) ));
											this.buf.b.Append(((char) ((((global::haxe.lang.Null<int>[]) (b64) )[( (( ( b1 << 4 ) | ( b2 >> 4 ) )) & 63 )]).@value) ));
											this.buf.b.Append(((char) ((((global::haxe.lang.Null<int>[]) (b64) )[( (( ( b2 << 2 ) | ( b3 >> 6 ) )) & 63 )]).@value) ));
											this.buf.b.Append(((char) ((((global::haxe.lang.Null<int>[]) (b64) )[( b3 & 63 )]).@value) ));
										}
										
										if (( i2 == max )) {
											int b11 = ((int) (v7.b[i2++]) );
											int b21 = ((int) (v7.b[i2++]) );
											this.buf.b.Append(((char) ((((global::haxe.lang.Null<int>[]) (b64) )[( b11 >> 2 )]).@value) ));
											this.buf.b.Append(((char) ((((global::haxe.lang.Null<int>[]) (b64) )[( (( ( b11 << 4 ) | ( b21 >> 4 ) )) & 63 )]).@value) ));
											this.buf.b.Append(((char) ((((global::haxe.lang.Null<int>[]) (b64) )[( ( b21 << 2 ) & 63 )]).@value) ));
										}
										else if (( i2 == ( max + 1 ) )) {
											int b12 = ((int) (v7.b[i2++]) );
											this.buf.b.Append(((char) ((((global::haxe.lang.Null<int>[]) (b64) )[( b12 >> 2 )]).@value) ));
											this.buf.b.Append(((char) ((((global::haxe.lang.Null<int>[]) (b64) )[( ( b12 << 4 ) & 63 )]).@value) ));
										}
										
										break;
									}
									
									
									default:
									{
										if (this.useCache) {
											global::haxe.lang.Runtime.callField(this.cache, "pop", 5594513, null);
										}
										
										if (global::Reflect.hasField(v, "hxSerialize")) {
											this.buf.b.Append(((string) ("C") ));
											this.serializeString(global::Type.getClassName(c));
											if (this.useCache) {
												global::haxe.lang.Runtime.callField(this.cache, "push", 1247875546, new global::Array<object>(new object[]{v}));
											}
											
											global::haxe.lang.Runtime.callField(v, "hxSerialize", 336134320, new global::Array<object>(new object[]{this}));
											this.buf.b.Append(((string) ("g") ));
										}
										else {
											this.buf.b.Append(((string) ("c") ));
											this.serializeString(global::Type.getClassName(c));
											if (this.useCache) {
												global::haxe.lang.Runtime.callField(this.cache, "push", 1247875546, new global::Array<object>(new object[]{v}));
											}
											
											this.serializeFields(v);
										}
										
										break;
									}
									
								}
								
							}
							
						}
						
						break;
					}
					
					
					case 7:
					{
						global::System.Type e = ((global::System.Type) (_g.@params[0]) );
						{
							if (this.useCache) {
								if (this.serializeRef(v)) {
									return;
								}
								
								global::haxe.lang.Runtime.callField(this.cache, "pop", 5594513, null);
							}
							
							this.buf.b.Append(((string) (global::Std.@string(( (this.useEnumIndex) ? ("j") : ("w") ))) ));
							this.serializeString(global::Type.getEnumName(e));
							if (this.useEnumIndex) {
								this.buf.b.Append(((string) (":") ));
								this.buf.b.Append(((string) (global::Std.@string(global::Type.enumIndex(v))) ));
							}
							else {
								this.serializeString(global::Type.enumConstructor(v));
							}
							
							this.buf.b.Append(((string) (":") ));
							global::Array arr = global::Type.enumParameters(v);
							if (( arr != null )) {
								this.buf.b.Append(((string) (global::Std.@string(((int) (global::haxe.lang.Runtime.getField_f(arr, "length", 520590566, true)) ))) ));
								{
									int _g4 = 0;
									while (( global::haxe.lang.Runtime.compare(_g4, ((int) (global::haxe.lang.Runtime.getField_f(arr, "length", 520590566, true)) )) < 0 )) {
										object v8 = arr[_g4];
										 ++ _g4;
										this.serialize(v8);
									}
									
								}
								
							}
							else {
								this.buf.b.Append(((string) ("0") ));
							}
							
							if (this.useCache) {
								global::haxe.lang.Runtime.callField(this.cache, "push", 1247875546, new global::Array<object>(new object[]{v}));
							}
							
						}
						
						break;
					}
					
					
					default:
					{
						throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat("Cannot serialize ", global::Std.@string(v)));
					}
					
				}
				
			}
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1164821372:
					{
						this.scount = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 603885322:
					{
						this.useEnumIndex = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 142605435:
					{
						this.useCache = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1164821372:
					{
						this.scount = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 2082268609:
					{
						this.shash = ((global::haxe.ds.StringMap<int>) (global::haxe.ds.StringMap<object>.__hx_cast<int>(((global::haxe.ds.StringMap) (@value) ))) );
						return @value;
					}
					
					
					case 1091869250:
					{
						this.cache = ((global::Array) (@value) );
						return @value;
					}
					
					
					case 4899635:
					{
						this.buf = ((global::StringBuf) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1962040800:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "serialize", 1962040800)) );
					}
					
					
					case 444663929:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "serializeFields", 444663929)) );
					}
					
					
					case 997465939:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "serializeRef", 997465939)) );
					}
					
					
					case 723690193:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "serializeString", 723690193)) );
					}
					
					
					case 603885322:
					{
						return this.useEnumIndex;
					}
					
					
					case 142605435:
					{
						return this.useCache;
					}
					
					
					case 1164821372:
					{
						return this.scount;
					}
					
					
					case 2082268609:
					{
						return this.shash;
					}
					
					
					case 1091869250:
					{
						return this.cache;
					}
					
					
					case 4899635:
					{
						return this.buf;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1164821372:
					{
						return ((double) (this.scount) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1962040800:
					{
						this.serialize(dynargs[0]);
						break;
					}
					
					
					case 444663929:
					{
						this.serializeFields(dynargs[0]);
						break;
					}
					
					
					case 997465939:
					{
						return this.serializeRef(dynargs[0]);
					}
					
					
					case 723690193:
					{
						this.serializeString(global::haxe.lang.Runtime.toString(dynargs[0]));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("useEnumIndex");
			baseArr.push("useCache");
			baseArr.push("scount");
			baseArr.push("shash");
			baseArr.push("cache");
			baseArr.push("buf");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


